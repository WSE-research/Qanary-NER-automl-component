FROM pytorch/pytorch:1.13.1-cuda11.6-cudnn8-runtime
USER root

ARG TRAININGDATA
ARG TESTDATA
ARG MODEL
ARG MODELTYPE
ARG LANGUAGE

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# install system dependencies
RUN : \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        openssh-server \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && :

WORKDIR /code

ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV --system-site-packages
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

COPY ./requirements.txt /code/requirements.txt

RUN pip install wheel

RUN pip install -r /code/requirements.txt

EXPOSE 8000

COPY ./app /code/app

RUN mkdir -p /code/app/spacy_model/corpus/trainingdata &&\
    mkdir -p /code/app/spacy_model/output/model-best &&\
    mkdir -p /code/app/spacy_model/corpus/spacy-docbins &&\
    mkdir -p /code/app/spacy_model/intermediate/results &&\
    mkdir -p /code/app/spacy_model/intermediate/docbins &&\
    mkdir -p /code/app/spacy_model/intermediate/model &&\
    mkdir -p /code/app/spacy_model/intermediate/trainingdata

COPY ./data/trainingdata /code/app/spacy_model/corpus/trainingdata/
COPY ./data/model /code/app/spacy_model/output/model-best/

COPY ./app/qanarycomponent.py  ./

# validate any csv files
RUN python /code/app/format_input.py ${TRAININGDATA} ${TESTDATA}

# check if new model must be trained
RUN python /code/app/train_a_model.py ${MODELTYPE} ${LANGUAGE}
